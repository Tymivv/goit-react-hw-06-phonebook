(this["webpackJsonpgoit-react-hw-06-phonebook"]=this["webpackJsonpgoit-react-hw-06-phonebook"]||[]).push([[0],{13:function(e,t,n){},15:function(e,t,n){},16:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),c=n(6),o=n.n(c),s=n(7),i=n(2),l=(n(13),n(0)),u=function(e){var t=e.onSubmit,n=Object(a.useState)(""),r=Object(i.a)(n,2),c=r[0],o=r[1],s=Object(a.useState)(""),u=Object(i.a)(s,2),d=u[0],b=u[1];return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("form",{className:"heading",onSubmit:function(e){e.preventDefault(),t({name:c,number:d}),o(""),b("")},children:[Object(l.jsxs)("label",{children:["Name",Object(l.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,value:c,onChange:function(e){var t=e.target.value;o(t)}})]}),Object(l.jsxs)("label",{children:["Phone",Object(l.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,value:d,onChange:function(e){var t=e.target.value;b(t)}})]}),Object(l.jsx)("button",{className:"button8",type:"submit",children:"Add contact"})]})})},d=(n(15),function(e){var t=e.filteredContacts,n=e.onDelete;return Object(l.jsx)("ul",{className:"list",children:t.map((function(e){var t=e.id,a=e.nameContact,r=e.tel;return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("li",{className:"item",children:[a," : ",r]},t),Object(l.jsxs)("button",{className:"button9",type:"button",onClick:n(t),children:["Delete ",a]})]})}))})}),b=function(e){var t=e.value,n=e.onChange;return Object(l.jsxs)("label",{className:"heading",children:["Find contact by name",Object(l.jsx)("input",{type:"text",name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,value:t,onChange:n})]})},j=n(8),m="contacts",h=function(){var e,t=Object(a.useState)(null!==(e=function(e){try{return JSON.parse(localStorage.getItem(e))}catch(t){return null}}(m))&&void 0!==e?e:[]),n=Object(i.a)(t,2),r=n[0],c=n[1],o=Object(a.useState)(""),h=Object(i.a)(o,2),f=h[0],O=h[1];Object(a.useEffect)((function(){!function(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(n){return null}}(m,r)}),[r]);return Object(l.jsxs)("div",{children:[Object(l.jsx)("h1",{children:"Phonebooc"}),Object(l.jsx)(u,{onSubmit:function(e){var t=e.name,n=e.number;if(r.some((function(e){e.id;var n=e.nameContact;e.tel;return n.toLowerCase()===t.toLowerCase()})))alert('name "'.concat(t,'" is already in list'));else{var a={id:Object(j.a)(),nameContact:t,tel:n};console.log(a),c((function(e){return[].concat(Object(s.a)(e),[a])})),console.log(r)}}}),Object(l.jsx)(b,{value:f,onChange:function(e){return t=e.target.value,void O(t);var t}}),Object(l.jsx)(d,{onDelete:function(e){return function(){c((function(t){return t.filter((function(t){return t.id!==e}))}))}},filteredContacts:function(){var e=f.toLowerCase();return r.filter((function(t){return t.nameContact.toLowerCase().includes(e)}))}()})]})};o.a.render(Object(l.jsx)(r.a.StrictMode,{children:Object(l.jsx)(h,{})}),document.getElementById("root"))}},[[16,1,2]]]);
//# sourceMappingURL=main.1c32eec3.chunk.js.map