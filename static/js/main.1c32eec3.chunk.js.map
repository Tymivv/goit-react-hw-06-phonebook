{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","components/Servises/localStorage.js","index.js"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","className","e","preventDefault","type","pattern","title","required","value","onChange","target","ContactList","filteredContacts","onDelete","map","id","nameContact","tel","onClick","Filter","STORAGE_KEY","App","key","JSON","parse","localStorage","getItem","error","storage","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","some","toLowerCase","alert","newContact","nanoid","console","log","prevContacts","contact","normalizedFilter","includes","getFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA8DeA,EA3DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAsBA,OACE,mCACE,uBAAMC,UAAU,UAAUN,SATT,SAACO,GACpBA,EAAEC,iBACFR,EAAS,CAAEE,OAAME,WACjBD,EAAQ,IACRE,EAAU,KAKR,UACE,yCAEE,uBACEI,KAAK,OACLP,KAAK,OACLQ,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAOX,EACPY,SA9Be,SAAC,GAAgB,IAChCD,EAD+B,EAAbE,OAClBF,MACRV,EAAQU,SA+BJ,0CAEE,uBACEJ,KAAK,MACLP,KAAK,SACLQ,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,MAAOT,EACPU,SArCiB,SAAC,GAAgB,IAClCD,EADiC,EAAbE,OACpBF,MACRR,EAAUQ,SAsCN,wBAAQP,UAAU,UAAUG,KAAK,SAAjC,+BC/BOO,G,MApBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,SAArB,OAClB,oBAAIZ,UAAU,OAAd,SACGW,EAAiBE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,IAApB,OACpB,qCACE,qBAAIhB,UAAU,OAAd,UACGe,EADH,MACmBC,IADOF,GAG1B,yBAAQd,UAAU,UAAUG,KAAK,SAASc,QAASL,EAASE,GAA5D,oBACUC,eCWHG,EApBA,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,wBAAOR,UAAU,UAAjB,iCAEE,uBACEG,KAAK,OACLP,KAAK,SACLQ,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAOA,EACPC,SAAUA,Q,OCJVW,EAAc,WA6ELC,EA3EH,WAAO,IAAD,EAChB,EAAgCzB,mBAAQ,UCH9B,SAAA0B,GACV,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,IACvC,MAAOK,GACP,OAAO,MDDgCC,CAAYR,UAAb,QAA6B,IAArE,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA4BlC,mBAAS,IAArC,mBAAOmC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,YCdC,SAACX,EAAKd,GACjB,IACEiB,aAAaS,QAAQZ,EAAKC,KAAKY,UAAU3B,IACzC,MAAOmB,GACP,OAAO,MDWPC,CAAaR,EAAaS,KACzB,CAACA,IAmDJ,OACE,gCACE,2CACA,cAAC,EAAD,CAAalC,SAlDG,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC3B,GACE8B,EAASO,MACP,cAAGrB,GAAH,IAAOC,EAAP,EAAOA,YAAP,EAAoBC,IAApB,OACED,EAAYqB,gBAAkBxC,EAAKwC,iBAGvCC,MAAM,SAAD,OAAUzC,EAAV,6BANP,CASA,IAAM0C,EAAa,CACjBxB,GAAIyB,cACJxB,YAAanB,EACboB,IAAKlB,GAEP0C,QAAQC,IAAIH,GACZT,GAAY,SAACa,GAAD,4BAAsBA,GAAtB,CAAoCJ,OAChDE,QAAQC,IAAIb,OAmCV,cAAC,EAAD,CACErB,MAAOuB,EACPtB,SAAU,SAACP,GAAD,OAjCYM,EAiCcN,EAAEQ,OAAOF,WAhCjDwB,EAAUxB,GADe,IAACA,KAoCxB,cAAC,EAAD,CACEK,SAjBiB,SAACE,GAAD,OAAQ,WAC7Be,GAAY,SAACa,GAAD,OACVA,EAAaZ,QAAO,SAACa,GAAD,OAAaA,EAAQ7B,KAAOA,UAgB9CH,iBAlCsB,WAC1B,IAAMiC,EAAmBd,EAAOM,cAEhC,OAAOR,EAASE,QAAO,qBAAGf,YACZqB,cAAcS,SAASD,MA8BfE,SE1E1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c32eec3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./ContactForm.css\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  ////// записує контакт\r\n\r\n  const handleChangeName = ({ target }) => {\r\n    const { value } = target;\r\n    setName(value);\r\n  };\r\n\r\n  const handleChangeNumber = ({ target }) => {\r\n    const { value } = target;\r\n    setNumber(value);\r\n  };\r\n\r\n  ////передає імя і тел\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"heading\" onSubmit={handelSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={name}\r\n            onChange={handleChangeName}\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChangeNumber}\r\n          />\r\n        </label>\r\n        <button className=\"button8\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport './ContactList.css';\r\n\r\nconst ContactList = ({ filteredContacts, onDelete }) => (\r\n  <ul className=\"list\">\r\n    {filteredContacts.map(({ id, nameContact, tel }) => (\r\n      <>\r\n        <li className=\"item\" key={id}>\r\n          {nameContact} : {tel}\r\n        </li>\r\n        <button className=\"button9\" type=\"button\" onClick={onDelete(id)}>\r\n          Delete {nameContact}\r\n        </button>\r\n      </>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"heading\">\r\n    Find contact by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      required\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport * as storage from \"../Servises/localStorage\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst STORAGE_KEY = \"contacts\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(storage.get(STORAGE_KEY) ?? []);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    storage.save(STORAGE_KEY, contacts);\r\n  }, [contacts]);\r\n\r\n  ////////додає контакт\r\n\r\n  const addContacts = ({ name, number }) => {\r\n    if (\r\n      contacts.some(\r\n        ({ id, nameContact, tel }) =>\r\n          nameContact.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`name \"${name}\" is already in list`);\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: nanoid(),\r\n      nameContact: name,\r\n      tel: number,\r\n    };\r\n    console.log(newContact);\r\n    setContacts((prevContacts) => [...prevContacts, newContact]);\r\n    console.log(contacts);\r\n  };\r\n  // шукає контакт\r\n\r\n  const handleFilterChange = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ nameContact }) =>\r\n      nameContact.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  ////видаляє контакт\r\n\r\n  // deleteContacts = id => {\r\n  //   this.setState(prevState => ({\r\n  //     contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n  //   }));\r\n  // };\r\n\r\n  const deleteContacts = (id) => () => {\r\n    setContacts((prevContacts) =>\r\n      prevContacts.filter((contact) => contact.id !== id)\r\n    );\r\n  };\r\n  ///////////////\r\n  return (\r\n    <div>\r\n      <h1>Phonebooc</h1>\r\n      <ContactForm onSubmit={addContacts} />\r\n\r\n      <Filter\r\n        value={filter}\r\n        onChange={(e) => handleFilterChange(e.target.value)}\r\n      />\r\n\r\n      <ContactList\r\n        onDelete={deleteContacts}\r\n        filteredContacts={getFilteredContacts()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}